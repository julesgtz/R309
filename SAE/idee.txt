Idées pour ce qu'on doit faire coté serveur:

	faire un systeme de dict pour les messages envoyé depuis le client et utiliser kwargs pour gerer les messages
	laisser nom de l'utilisateur et pas mettre d'id car on ne souhaite pas changer de nom tt le temps d'user
	a voir si ID nécessaire coté channel
	system de log en clair sur dans un .txt comme wtn bot
	enregistrer dans mysql les messages entres users + channels pour pouvoir voir les anciens messages
	Enregistrer Nom , Heure, Message et channel où il a été envoyé, pour pouvoir bien tout réafficher
	Pouvoir kick/ ban depuis le nom du gars ou l'ip
	LE SERVEUR DOIT FAIRE UN DICTIONNAIRE POUR ENREGISTRER LE NOM DU GARS ET SON IP ACTUELLE (si le gars se deco et se co sur une autre ip, il faut que le dictionnaire se mette a jour)

message "relais":

	message dans un channel serait {"channel_message":"voici le message", "user":"nom de l'user", "channel": "nom du channel / id ?"}

	message privé serait {"private_message":"voici le message", "user":"nom de l'user", "other_user": "nom de l'user"}

message "be/server-side":

	commande serait quand il tape / {"command":"ban Jules", "user":"nom de l'user"}

	quand l'utilsateur clique sur un channel, cela doit afficher les messages d'avant : {"get_channel":"nom du channel / id ?", "user":"nom de l'utilisateur"}

	quand l'utilisateur clique sur une conv pv, il doit y'avoir les messages précedent aussi {"get_private":"nom de l'user", "user":"nom de l'utilisateur"}

	quand l'utilsateur fait une demande de join un channel privé {"join":"nom du channel / id ?", "user":"nom de l'utilisateur"}
	si le channel est un channel sans autorisation, accepte auto sinon stocker la demande et attentre admin

	quand l'utilisateur se log {"user:pwd": "user:pwd en clair", "user":"nom de l'utilisateur"}


Cote client:
	Faire interfaces graphique où tu peux faire la demande pour rejoindre un channel, ca envoie une rq mais rien de plus
	Page de LOGIN d'abord
	page de REGISTER (par email ou que sais-je)
	DOCS